#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
ENV_FILE="$ROOT_DIR/.env"

OS_NAME="$(uname -s)"
case "$OS_NAME" in
  Linux*)   PLATFORM=linux ;;
  Darwin*)  PLATFORM=mac ;;
  MINGW*|MSYS*|CYGWIN*) PLATFORM=windows ;;
  *)
    echo "Unsupported OS: $OS_NAME" >&2
    exit 1
    ;;
esac

echo "Detected platform: $PLATFORM"

install_rust() {
  if ! command -v rustup >/dev/null; then
    curl https://sh.rustup.rs -sSf | sh -s -- -y
    # shellcheck source=/dev/null
    source "$HOME/.cargo/env"
  fi
  rustup install -y stable >/dev/null 2>&1 || true
  rustup default stable >/dev/null 2>&1 || true
}

install_node() {
  if ! command -v node >/dev/null || ! node -v | grep -q '^v20'; then
    case "$PLATFORM" in
      linux)
        curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
        sudo apt-get install -y nodejs
        ;;
      mac)
        brew install node@20
        brew link --overwrite --force node@20
        ;;
      windows)
        choco install -y nodejs-lts
        ;;
    esac
  fi
  corepack enable
  corepack prepare yarn@stable --activate
}

install_ffmpeg() {
  if ! command -v ffmpeg >/dev/null; then
    case "$PLATFORM" in
      linux)
        sudo apt-get install -y ffmpeg
        ;;
      mac)
        brew install ffmpeg
        ;;
      windows)
        choco install -y ffmpeg
        ;;
    esac
  fi
}

install_whisper_model() {
  CACHE_DIR="$(python3 - <<'PY'
import os, pathlib
cache = os.getenv('XDG_CACHE_HOME', os.path.join(pathlib.Path.home(), '.cache'))
print(os.path.join(cache, 'whisper', 'models'))
PY
)"
  mkdir -p "$CACHE_DIR"
  MODEL="$CACHE_DIR/ggml-base.bin"
  if [ ! -f "$MODEL" ]; then
    curl -L -o "$MODEL" https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-base.bin
  fi
}

PKG_CONFIG_PATH=""

if [ "$PLATFORM" = linux ]; then
  sudo apt-get update
  "$ROOT_DIR/scripts/install_tauri_deps.sh"
  install_ffmpeg
  install_rust
  install_node
  PKG_CONFIG_PATH=$(grep PKG_CONFIG_PATH "$ROOT_DIR/.env.tauri" 2>/dev/null | cut -d= -f2- || true)
elif [ "$PLATFORM" = mac ]; then
  brew update
  brew install gtk+3 webkit2gtk pkg-config
  install_ffmpeg
  install_rust
  install_node
elif [ "$PLATFORM" = windows ]; then
  install_ffmpeg
  install_rust
  install_node
fi

install_whisper_model

echo "# Generated by scripts/bootstrap.sh" > "$ENV_FILE"
if [ -n "$PKG_CONFIG_PATH" ]; then
  echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> "$ENV_FILE"
fi

echo "Bootstrap complete. Environment written to $ENV_FILE"
